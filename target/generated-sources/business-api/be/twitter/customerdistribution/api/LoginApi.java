/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.2.3).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package be.twitter.customerdistribution.api;

import be.twitter.customerdistribution.types.Credential;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-09-25T17:08:44.791029500+05:30[Asia/Calcutta]")

@Validated
@Api(value = "login", description = "the login API")
public interface LoginApi {

    /**
     * POST /login
     * Login as old user
     *
     * @param credential  (optional)
     * @return success token (status code 200)
     *         or internal server error (status code 500)
     *         or error details (status code 400)
     */
    @ApiOperation(value = "", nickname = "login", notes = "Login as old user", response = String.class, tags={ "Registration and Login", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success token", response = String.class),
        @ApiResponse(code = 500, message = "internal server error"),
        @ApiResponse(code = 400, message = "error details", response = String.class) })
    @RequestMapping(value = "/login",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<String> login(@ApiParam(value = ""  )  @Valid @RequestBody(required = false) Credential credential);

}
